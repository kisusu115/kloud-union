{
  "C:\\projects\\CWS": {
    "versionSfCore": null,
    "versionFramework": "4.4.14",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "morning-backend",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "ap-northeast-2",
              "stage": "dev",
              "environment": {
                "PORT": "3000",
                "MONGO_URI": "mongodb+srv://kloud_union:4o0dMexgTZsfajxs@2024-cws.myqrb.mongodb.net/morning",
                "KAKAO_ID": "3aa5a3954a010521a911f6a5dda11293",
                "KAKAO_URL": "/auth/kakao/callback",
                "SESSION_SECRET": "<REDACTED>",
                "TIME_TABLE_API_URL": "http://openapi.seoul.go.kr:8088/534e51786a6b696b3634414c55584b/json/SearchSTNTimeTableByIDService/1/300",
                "REAL_TIME_API_URL": "http://swopenapi.seoul.go.kr/api/subway/737a566f446b696b32384e57554246/json/realtimeStationArrival/0/5",
                "DISTANCE_API_URL": "https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&callback=function",
                "DISTANCE_API_APPKEY": "8fF7YX32Qh7T0oDczgqh59FCYLhWUp4e4h6a85hf",
                "S3_STATION_CSV": "https://kloud-union.s3.ap-northeast-2.amazonaws.com/station.csv",
                "WEATHER_FORECAST_API_KEY": "<REDACTED>",
                "WEATHER_FORECAST_API_URL": "http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "AppLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/morning-backend-dev-app"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "morning-backend",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/morning-backend-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/morning-backend-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "morning-backend",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "AppLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-ap-northeast-2-ec2a495a-3ad2",
                        "S3Key": "serverless/morning-backend/dev/1733743436695-2024-12-09T11:23:56.695Z/morning-backend.zip"
                      },
                      "Handler": "app.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "morning-backend-dev-app",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "PORT": "3000",
                          "MONGO_URI": "mongodb+srv://kloud_union:4o0dMexgTZsfajxs@2024-cws.myqrb.mongodb.net/morning",
                          "KAKAO_ID": "3aa5a3954a010521a911f6a5dda11293",
                          "KAKAO_URL": "/auth/kakao/callback",
                          "SESSION_SECRET": "<REDACTED>",
                          "TIME_TABLE_API_URL": "http://openapi.seoul.go.kr:8088/534e51786a6b696b3634414c55584b/json/SearchSTNTimeTableByIDService/1/300",
                          "REAL_TIME_API_URL": "http://swopenapi.seoul.go.kr/api/subway/737a566f446b696b32384e57554246/json/realtimeStationArrival/0/5",
                          "DISTANCE_API_URL": "https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&callback=function",
                          "DISTANCE_API_APPKEY": "8fF7YX32Qh7T0oDczgqh59FCYLhWUp4e4h6a85hf",
                          "S3_STATION_CSV": "https://kloud-union.s3.ap-northeast-2.amazonaws.com/station.csv",
                          "WEATHER_FORECAST_API_KEY": "<REDACTED>",
                          "WEATHER_FORECAST_API_URL": "http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst",
                          "NODE_OPTIONS": "--enable-source-maps"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AppLogGroup"
                    ]
                  },
                  "AppLambdaVersionmSmk4kSnU3ZihfpSnNPvdEr9ZZxeDg7LpFWJZ0eesU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AppLambdaFunction"
                      },
                      "CodeSha256": "wxg3wdPf4S3Re/2wi0NqXlVnP+M0JTkavrb6KObhahA="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-morning-backend",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "AppLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationApp": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteDefault": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "$default",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationApp"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationApp"
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-ap-northeast-2-ec2a495a-3ad2",
                    "Export": {
                      "Name": "sls-morning-backend-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "AppLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AppLambdaVersionmSmk4kSnU3ZihfpSnNPvdEr9ZZxeDg7LpFWJZ0eesU"
                    },
                    "Export": {
                      "Name": "sls-morning-backend-dev-AppLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-morning-backend-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-morning-backend-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "app": {
                "handler": "app.handler",
                "events": [
                  {
                    "httpApi": "*",
                    "resolvedMethod": "ANY"
                  }
                ],
                "name": "morning-backend-dev-app",
                "environment": {
                  "NODE_OPTIONS": "--enable-source-maps"
                },
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "AppLambdaVersionmSmk4kSnU3ZihfpSnNPvdEr9ZZxeDg7LpFWJZ0eesU"
              }
            },
            "plugins": [
              "serverless-offline"
            ],
            "custom": {
              "dotenv": true
            },
            "build": {
              "esbuild": {
                "bundle": true,
                "minify": true,
                "target": "node18"
              }
            }
          },
          "configFileDirPath": "C:\\projects\\CWS",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\projects\\CWS",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "morning-backend",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "ap-northeast-2",
        "stage": "dev",
        "environment": {
          "PORT": "3000",
          "MONGO_URI": "mongodb+srv://kloud_union:4o0dMexgTZsfajxs@2024-cws.myqrb.mongodb.net/morning",
          "KAKAO_ID": "3aa5a3954a010521a911f6a5dda11293",
          "KAKAO_URL": "/auth/kakao/callback",
          "SESSION_SECRET": "<REDACTED>",
          "TIME_TABLE_API_URL": "http://openapi.seoul.go.kr:8088/534e51786a6b696b3634414c55584b/json/SearchSTNTimeTableByIDService/1/300",
          "REAL_TIME_API_URL": "http://swopenapi.seoul.go.kr/api/subway/737a566f446b696b32384e57554246/json/realtimeStationArrival/0/5",
          "DISTANCE_API_URL": "https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&callback=function",
          "DISTANCE_API_APPKEY": "8fF7YX32Qh7T0oDczgqh59FCYLhWUp4e4h6a85hf",
          "S3_STATION_CSV": "https://kloud-union.s3.ap-northeast-2.amazonaws.com/station.csv",
          "WEATHER_FORECAST_API_KEY": "<REDACTED>",
          "WEATHER_FORECAST_API_URL": "http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst"
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "AppLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/morning-backend-dev-app"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "morning-backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/morning-backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/morning-backend-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "morning-backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "AppLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-northeast-2-ec2a495a-3ad2",
                  "S3Key": "serverless/morning-backend/dev/1733743436695-2024-12-09T11:23:56.695Z/morning-backend.zip"
                },
                "Handler": "app.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "morning-backend-dev-app",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "PORT": "3000",
                    "MONGO_URI": "mongodb+srv://kloud_union:4o0dMexgTZsfajxs@2024-cws.myqrb.mongodb.net/morning",
                    "KAKAO_ID": "3aa5a3954a010521a911f6a5dda11293",
                    "KAKAO_URL": "/auth/kakao/callback",
                    "SESSION_SECRET": "<REDACTED>",
                    "TIME_TABLE_API_URL": "http://openapi.seoul.go.kr:8088/534e51786a6b696b3634414c55584b/json/SearchSTNTimeTableByIDService/1/300",
                    "REAL_TIME_API_URL": "http://swopenapi.seoul.go.kr/api/subway/737a566f446b696b32384e57554246/json/realtimeStationArrival/0/5",
                    "DISTANCE_API_URL": "https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&callback=function",
                    "DISTANCE_API_APPKEY": "8fF7YX32Qh7T0oDczgqh59FCYLhWUp4e4h6a85hf",
                    "S3_STATION_CSV": "https://kloud-union.s3.ap-northeast-2.amazonaws.com/station.csv",
                    "WEATHER_FORECAST_API_KEY": "<REDACTED>",
                    "WEATHER_FORECAST_API_URL": "http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst",
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AppLogGroup"
              ]
            },
            "AppLambdaVersionmSmk4kSnU3ZihfpSnNPvdEr9ZZxeDg7LpFWJZ0eesU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AppLambdaFunction"
                },
                "CodeSha256": "wxg3wdPf4S3Re/2wi0NqXlVnP+M0JTkavrb6KObhahA="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-morning-backend",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "AppLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationApp": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDefault": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "$default",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationApp"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationApp"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-northeast-2-ec2a495a-3ad2",
              "Export": {
                "Name": "sls-morning-backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "AppLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AppLambdaVersionmSmk4kSnU3ZihfpSnNPvdEr9ZZxeDg7LpFWJZ0eesU"
              },
              "Export": {
                "Name": "sls-morning-backend-dev-AppLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-morning-backend-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-morning-backend-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "app": {
          "handler": "app.handler",
          "events": [
            {
              "httpApi": "*",
              "resolvedMethod": "ANY"
            }
          ],
          "name": "morning-backend-dev-app",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "AppLambdaVersionmSmk4kSnU3ZihfpSnNPvdEr9ZZxeDg7LpFWJZ0eesU"
        }
      },
      "plugins": [
        "serverless-offline"
      ],
      "custom": {
        "dotenv": true
      },
      "build": {
        "esbuild": {
          "bundle": true,
          "minify": true,
          "target": "node18"
        }
      }
    },
    "serviceRawFile": "service: morning-backend\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: ap-northeast-2\r\n  stage: dev\r\n  environment:\r\n    PORT: 3000\r\n    MONGO_URI: mongodb+srv://kloud_union:4o0dMexgTZsfajxs@2024-cws.myqrb.mongodb.net/morning\r\n    KAKAO_ID: 3aa5a3954a010521a911f6a5dda11293\r\n    KAKAO_URL: /auth/kakao/callback\r\n    SESSION_SECRET: 621ddc0f441a8fd2ed236ddff057da627d6f2a24956d4761eb3c9dfe7ec6617a\r\n    TIME_TABLE_API_URL: http://openapi.seoul.go.kr:8088/534e51786a6b696b3634414c55584b/json/SearchSTNTimeTableByIDService/1/300\r\n    REAL_TIME_API_URL: http://swopenapi.seoul.go.kr/api/subway/737a566f446b696b32384e57554246/json/realtimeStationArrival/0/5\r\n    DISTANCE_API_URL: https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&callback=function\r\n    DISTANCE_API_APPKEY: 8fF7YX32Qh7T0oDczgqh59FCYLhWUp4e4h6a85hf\r\n    S3_STATION_CSV: https://kloud-union.s3.ap-northeast-2.amazonaws.com/station.csv\r\n    WEATHER_FORECAST_API_KEY: KaOVpMinYwuJv6ErOV0Al30NjSNNgtktXs4Uh4GULtK4vY5I1EUafNAOJB5/e45dlht8laRj9ZpKuwtnOUBOSg==\r\n    WEATHER_FORECAST_API_URL: http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst\r\n\r\nfunctions:\r\n  app:\r\n    handler: app.handler\r\n    events:\r\n      - httpApi: '*'\r\n\r\nplugins:\r\n  - serverless-offline # 로컬 테스트용\r\n\r\ncustom:\r\n  dotenv: true\r\n\r\n# ESBuild 사용 설정\r\nbuild:\r\n  esbuild:\r\n    bundle: true\r\n    minify: true\r\n    target: node18\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "460eb8f2005b4e28b69264cf7307ebce",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "06213196-ae9a-4217-b20c-f7bf8c427a57",
    "orgName": "kloudunion",
    "userId": "kdfrjB9tLc81ltc3cG",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "kloudunion",
    "subscription": null,
    "userEmail": "kukusu115@gmail.com",
    "serviceProviderAwsRegion": "ap-northeast-2",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "203918845339",
    "projectType": "traditional",
    "versionSf": "4.4.14",
    "serviceProviderAwsCfStackName": "morning-backend-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:ap-northeast-2:203918845339:stack/morning-backend-dev/9d7d46e0-b61b-11ef-b66f-06cafece6ec7",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-northeast-2:203918845339:stack/morning-backend-dev/9d7d46e0-b61b-11ef-b66f-06cafece6ec7",
    "serviceProviderAwsCfStackCreated": "2024-12-09T10:52:00.060Z",
    "serviceProviderAwsCfStackUpdated": "2024-12-09T11:24:00.162Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "AppLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-northeast-2:203918845339:function:morning-backend-dev-app:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-morning-backend-dev-AppLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "o5cx6i4kdj",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-morning-backend-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-northeast-2-ec2a495a-3ad2",
        "ExportName": "sls-morning-backend-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://o5cx6i4kdj.execute-api.ap-northeast-2.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-morning-backend-dev-HttpApiUrl"
      }
    ]
  }
}